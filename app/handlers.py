from re import match

from aiogram import Dispatcher
from aiogram.types import Message
from aiogram.dispatcher.filters import CommandStart

from utils import run_func_in_process
from loader import exchange_requests, image_generator


async def start(message: Message):
    await message.answer(
        "üìâ<b>–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏ —Å–ø–∏—Å–æ–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é\n"
         "‚ñπ /d (/day) - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –∑–∞ –¥–µ–Ω—å\n"
         "‚ñπ /w (/week) - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –∑–∞ –Ω–µ–¥–µ–ª—é\n"
         "‚ñπ /m (/month) - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –∑–∞ –º–µ—Å—è—Ü"
    )


async def send_coins_info(message: Message, days: int = 30):
    coins = message.text.replace(match(r"/\w+\b", message.text).group(0), "")[1:]
    if not coins:
        return await message.answer(
            "‚ùó –ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å –º–æ–Ω–µ—Ç—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é! "
            "–ù–∞–ø—Ä–∏–º–µ—Ä: /day bitcoin, ethereum"
        )

    coins = coins.split(", ")
    if len(coins) > 5:
        return await message.answer("‚ùó –ú–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 5 –º–æ–Ω–µ—Ç –∑–∞ —Ä–∞–∑")

    coins_data = await exchange_requests.get_coins_info(coins, days=days)
    if not coins_data:
        return await message.answer("‚ùó –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥")

    img = await run_func_in_process(
        image_generator.create_image_with_cryptocurrency_rate,
        coins_data,
        days
    )
    await message.answer_photo(photo=img)


async def get_day_rate(message: Message):
    await send_coins_info(message, 1)


async def get_week_rate(message: Message):
    await send_coins_info(message, 7)


async def get_month_rate(message: Message):
    await send_coins_info(message, 31)


def register_handlers_users(dp: Dispatcher):
    dp.register_message_handler(start, CommandStart())
    dp.register_message_handler(get_day_rate, commands=["d", "day"])
    dp.register_message_handler(get_week_rate, commands=["w", "week"])
    dp.register_message_handler(get_month_rate, commands=["m", "month"])
